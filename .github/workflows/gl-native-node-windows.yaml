name: gl-native-node Windows Build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2022

    strategy:
      fail-fast: false
      matrix:
        target-cpu: [x64]
        target-os: [win]

    steps:
      - name: Support longpaths
        run: git config --system core.longpaths true

      - name: Setup Node 14
        uses: actions/setup-node@v4
        with:
          node-version: 14

      - name: Checkout gl-native-node
        uses: actions/checkout@v4
        with:
            repository: 'mhalada/gl-native-node'
            token: ${{ secrets.GH_PAT }}
            path: gl-native-node

      - name: Checkout libimagequant dependency
        uses: actions/checkout@v4
        with:
            repository: 'ImageOptim/libimagequant'
            ref: '2.17.0'
            path: gl-native-node/vendor/libimagequant

      - name: Checkout mapbox-gl-native dependency
        uses: actions/checkout@v4
        with:
            repository: 'maptiler/mapbox-gl-native-private'
            ref: 'maptiler'
            path: gl-native-node/vendor/mapbox-gl-native
            token: ${{ secrets.GH_PAT }}
            submodules: 'recursive'

      - name: Download libwebp dependency
        run: |
          mkdir dependencies\apps, dependencies\bin, dependencies\include, dependencies\lib
          echo "LIBS_DIR=$(Get-Item .)\dependencies" >> $env:GITHUB_ENV
          curl -o libwebp.zip https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-1.3.0-windows-x64.zip
          mkdir libwebp
          tar -xf libwebp.zip -C libwebp
          copy libwebp\libwebp-1.3.0-windows-x64\lib\libwebp.lib dependencies\lib\libwebp.lib
          robocopy libwebp\libwebp-1.3.0-windows-x64\include dependencies\include /e
          if ($lastexitcode -lt 8) { $global:LASTEXITCODE = $null }

      - name: Download GDAL SDK dependency
        run: |
          curl -o release-1911-x64-dev.zip https://download.gisinternals.com/sdk/downloads/release-1911-x64-dev.zip
          mkdir release-1911-x64-dev
          tar -xf release-1911-x64-dev.zip -C release-1911-x64-dev
          robocopy release-1911-x64-dev\release-1911-x64\bin dependencies\bin /e
          robocopy release-1911-x64-dev\release-1911-x64\include dependencies\include /e
          robocopy release-1911-x64-dev\release-1911-x64\lib dependencies\lib /e
          if ($lastexitcode -lt 8) { $global:LASTEXITCODE = $null }

      - name: Download ANGLE dependency
        run: |
          curl -L -o angle.zip https://github.com/mhalada/angle-builds/releases/download/v0.0.1/angle-${{ matrix.target-cpu }}-win.zip
          mkdir angle
          tar -xf angle.zip -C angle
          copy angle\libEGL.dll dependencies\lib\libEGL.dll
          copy angle\libGLESv2.dll dependencies\lib\libEGL.dll

      - name: Build gl-native-node
        working-directory: gl-native-node
        run: |
          echo $env:LIBS_DIR
          npm install -g cmake-js node-addon-api
          ./build.bat

      - name: Artifact Preparation
        working-directory: gl-native-node
        run: |
          mkdir ../output
          cp dist/mbgl-server.node ../output/mbgl-win32-${{ matrix.target-cpu }}.node
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gl-native-node-${{ matrix.target-cpu }}-${{ matrix.target-os }}
          path: output/
          retention-days: 1
