name: gl-native-node Linux Build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        target-cpu: [x64, arm64]
        target-os: [linux]

    steps:
      - name: Checkout gl-native-node
        uses: actions/checkout@v4
        with:
            repository: 'mhalada/gl-native-node'
            token: ${{ secrets.GH_PAT }}
            path: gl-native-node

      - name: Checkout libimagequant dependency
        uses: actions/checkout@v4
        with:
            repository: 'ImageOptim/libimagequant'
            ref: '2.17.0'
            path: gl-native-node/vendor/libimagequant

      - name: Checkout libwebp dependency
        uses: actions/checkout@v4
        with:
            repository: 'webmproject/libwebp'
            ref: '1.3.0'
            path: gl-native-node/vendor/libwebp

      - name: Checkout mapbox-gl-native dependency
        uses: actions/checkout@v4
        with:
            repository: 'maptiler/mapbox-gl-native-private'
            ref: 'maptiler'
            path: gl-native-node/vendor/mapbox-gl-native
            token: ${{ secrets.GH_PAT }}
            submodules: 'recursive'

    #   - name: Build libwebp dependency
    #     working-directory: gl-native-node/vendor
    #     run: |
    #       mkdir ../dist libwebp
    #       wget https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-1.3.0-linux-x86-64.tar.gz
    #       tar -xvzf libwebp-1.3.0-linux-x86-64.tar.gz -C libwebp --strip-components=1
    #       cp libwebp/lib/libwebp.a ../dist/.
    #       mv libwebp/include libwebp/src

      - name: Download ANGLE dependency
        working-directory: gl-native-node
        run: |
          mkdir dist
          wget https://github.com/mhalada/angle-builds/releases/download/v0.0.1/angle-${{ matrix.target-cpu }}-linux.zip -O angle.zip
          unzip angle.zip -d angle
          cp angle/libEGL.so dist/.
          cp angle/libGLESv2.so dist/.
          cp angle/libvk_swiftshader.so dist/.
          cp angle/libvulkan.so.1 dist/.
          cp angle/vk_swiftshader_icd.json dist/.

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          platforms: linux/amd64,linux/arm64

      - name: Build gl-native-node
        working-directory: gl-native-node
        env:
          DOCKER_PLATFORM: ${{ matrix.target-cpu == 'arm64' && 'arm64' || 'amd64' }}
        run: |
          chmod +x ./build.sh
          chmod +x ./build-webp.sh
          chmod +x ./build-in-docker.sh
          chmod +x ./test.sh
          ./build-in-docker.sh server

      - name: Artifact Preparation
        working-directory: gl-native-node
        run: |
          mkdir ../output
          cp dist/mbgl-server.node ../output/mbgl-linux-${{ matrix.target-cpu }}.node
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gl-native-node-${{ matrix.target-cpu }}-${{ matrix.target-os }}
          path: output/
          retention-days: 1
